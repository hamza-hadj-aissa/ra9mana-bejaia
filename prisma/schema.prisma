generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
  id        String      @id @default(uuid())
  name      String  
  age       Int
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  resetToken             ResetToken[]
  jwt             Jwt[]
}

model Jwt {
  id        String   @id @default(uuid())
  token     String   @unique
  user      Users     @relation(fields: [userId], references: [id])
  userId    String @unique
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}



model ResetToken {
  id        String   @id @default(uuid())
  token     String   @unique
  expiresAt DateTime
  user      Users     @relation(fields: [userId], references: [id])
  userId    String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Ships {
  id        String     @id @default(uuid())
  name      String
  height    Float
  width     Float
  trips     Trip[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Trip {
  id        String     @id @default(uuid())
  departureTime DateTime
  arrivalTime   DateTime
  parkingTime   Int
  ship      Ships    @relation(fields: [shipId], references: [id])
  shipId    String
  cargo     CargoType    @relation(fields: [cargoId], references: [id])
  cargoId   String
  urgency   Urgency    @relation(fields: [urgencyId], references: [id])
  urgencyId String
  specialCondition SpecialCondition? @relation(fields: [specialConditionId], references: [id])
  deck      Decks @relation(fields: [deckId], references: [id])
  deckId    String
  specialConditionId String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model CargoType {
  id        String     @id @default(uuid())
  name      String @unique
  weight  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  cargos    Trip[]
}

model Urgency {
  id        String     @id @default(uuid())
  name      String @unique
  weight  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  urgencies Trip[]
}

model SpecialCondition {
  id        String     @id @default(uuid())
  name      String @unique
  weight  Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  trips     Trip[]
}

model Decks {
  id        String     @id @default(uuid())
  name      String
  height    Float
  width     Float
  trips      Trip[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

enum Role {
  USER
  ADMIN
}
