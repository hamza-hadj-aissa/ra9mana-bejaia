generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}


model Users {
  id        Int      @id @default(autoincrement())
  name      String  
  age       Int
  email     String   @unique
  password  String
  role      Role
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  resetToken             ResetToken[]
  jwt             Jwt[]
}

model Jwt {
  id        Int   @id @default(autoincrement())
  token     String   @unique
  user      Users     @relation(fields: [userId], references: [id])
  userId    Int @unique
  createdAt DateTime @default(now())
}

enum Role {
  USER
  ADMIN
}

model ResetToken {
  id        Int   @id @default(autoincrement())
  token     String   @unique
  expiresAt DateTime
  user      Users     @relation(fields: [userId], references: [id])
  userId    Int
  createdAt DateTime @default(now())
}

model Ship {
  id        Int     @id @default(autoincrement())
  name      String
  height    Float
  width     Float
  trips     Trip[]
  createdAt DateTime @default(now())
}

model Trip {
  id        Int     @id @default(autoincrement())
  name      String
  ship      Ship    @relation(fields: [shipId], references: [id])
  shipId    Int
  cargo     CargoType    @relation(fields: [cargoId], references: [id])
  cargoId   Int
  urgency   Urgency    @relation(fields: [urgencyId], references: [id])
  urgencyId Int
  specialCondition SpecialCondition? @relation(fields: [specialConditionId], references: [id])
  specialConditionId Int?
  createdAt DateTime @default(now())
}

model CargoType {
  id        Int     @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  cargos    Trip[]
}

model Urgency {
  id        Int     @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  urgencies Trip[]
}

model SpecialCondition {
  id        Int     @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now())
  trips     Trip[]
}